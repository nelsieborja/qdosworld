<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Product extends CI_Controller {		var $childs = array();		public function __construct()    {		 parent::__construct();		 		// Load model, library		$this->load->model($this->config->item('frontend_folder').'Product_model', 'product');		$this->load->model($this->config->item('frontend_folder').'Category_model', 'category');		$this->load->library('Breadcrumb');	}		public function get()	{		$data = array();				// Determine current category		$current_category_id = $this->uri->segment($this->uri->total_segments());				// Category ID is provided so get_by_category		if (preg_match("/\d/", $current_category_id)) {			// Check if category has children, then need to also get children's products			$this->getChildren($current_category_id);			if ($this->childs) {				$current_category_id = array_unique($this->childs);			}			// $this->load->library('Debug', array_unique($this->childs));						$res = $this->product->get_by_category($current_category_id);		// Fetch all products		} else {			$res = $this->product->get();		}				if ($res) {			foreach($res as $row){				if ($row['description']) {					$row['description'] = preg_replace(array("/\r\n|\r|\n/"), array("<br/>"), $row['description']);				}				if ($row['specs']) {					$row['specs'] = preg_replace(array("/\r\n|\r|\n/"), array("<br/>"), $row['specs']);				}				if ($row['images']) {					$row['images'] = explode(",", $row['images']);				}								$row['url'] = preg_replace(array("/[\,\'\"\:\;]/", "/[\s\+\/]/"), array("", "-"), strtolower($row['name'])).'-'.$row['id'];								$data[$row['id']] = $row;			}		}				$breadcrumb = $this->breadcrumb->generate();				$this->load->view($this->config->item('frontend_folder').'layout/header', array('breadcrumb' => $breadcrumb));		$this->load->view($this->config->item('frontend_folder').'products', array('products' => $data, 'current' => array_pop($breadcrumb)));		$this->load->view($this->config->item('frontend_folder').'layout/footer');	}		private function getChildren($parent_id)    {		$res = $this->category->get(NULL, $parent_id);		if ($res) {			foreach($res as $row){				$this->childs[] = $row['id'];				$this->getChildren($row['id']);			}		}		$this->childs[] = $parent_id;	}	}